{"version":3,"file":"static/js/782.ca8260db.chunk.js","mappings":"6MAaMA,EAAkB,SAACC,GACvB,IAAMC,EAAgBC,EAAAA,IAASF,GAAQ,SAAAG,GAAC,OAAIA,EAAEC,MAAM,IAChDC,EAAa,GAajB,OAZAJ,EAAcK,SAAQ,SAACC,EAAKC,GALf,IAACC,EAMA,KAARD,GAAYH,EAAWK,KAAK,CAC9BC,GAAIH,EACJJ,OAAQI,EACRI,YAAaL,EAAIM,OACjBC,SAAUP,EAAIQ,QAAO,SAAAZ,GAAC,OAAIA,EAAEa,KAAKC,WAAW,QAAQ,IAAEJ,OACtDK,UAAWX,EAAIQ,QAAO,SAAAZ,GAAC,OAAIA,EAAEa,KAAKC,WAAW,WAAW,IAAEJ,OAC1DM,SAAUZ,EAAIQ,QAAO,SAAAZ,GAAC,OAAIA,EAAEa,KAAKC,WAAW,YAAY,IAAEJ,OAC1DO,WAAYb,EAAIQ,QAAO,SAAAZ,GAAC,MAAe,YAAXA,EAAEa,IAAkB,IAAEH,OAClDQ,YAdUZ,EAcSF,EAAIQ,QAAO,SAAAZ,GAAC,MAAe,cAAXA,EAAEa,IAAoB,IAAEM,KAAI,SAAAnB,GAAC,OAAIA,EAAEoB,QAAQV,MAAM,IAAEW,QAAO,SAACrB,EAAGsB,GAAC,OAAKtB,EAAIsB,CAAC,GAAE,GAAKlB,EAAIM,OAdrGa,KAAKC,MAA+B,KAAxBlB,EAAMmB,OAAOC,UAAkB,MAgBjE,IACOxB,CACT,EAqBA,UAnBwB,SAAHyB,GAAA,IAAM9B,EAAM8B,EAAN9B,OAAM,OAC/B+B,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,EACbC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,MAAO,CAAEC,UAAW,GAAIC,aAAc,OAC/CJ,EAAAA,EAAAA,KAACK,EAAAA,EAAU,CAACC,QAAQ,KAAIP,SAAC,2BAGzBC,EAAAA,EAAAA,KAACO,EAAAA,EAAQ,CACPL,MAAO,CAAEM,UAAW,KACpBC,KAAM5C,EAAgBC,GACtB4C,QAASC,EAAAA,EACTC,SAAU,GACVC,QAAQ,UACRC,yBAAuB,EACvBC,WAAY,CACVC,QAASC,EAAAA,OAGE,C,6HCtCbA,EAAgB,WACpB,OACEpB,EAAAA,EAAAA,MAACqB,EAAAA,EAAoB,CAAAnB,SAAA,EACnBC,EAAAA,EAAAA,KAACmB,EAAAA,EAAwB,CAACC,MAAM,UAChCpB,EAAAA,EAAAA,KAACqB,EAAAA,EAAuB,CAACnB,MAAO,CAAEkB,MAAO,cACzCpB,EAAAA,EAAAA,KAACsB,EAAAA,EAA0B,CAACF,MAAM,UAClCpB,EAAAA,EAAAA,KAACuB,EAAAA,GAAiB,CAACH,MAAM,WAG/B,C,8ECnBA,IAAMI,EAAY,CAChB,CAAEC,MAAO,YAAaC,WAAY,YAAaC,MAAO,KACtD,CAAEF,MAAO,SAAUC,WAAY,SAAUC,MAAO,IAChD,CAAEF,MAAO,OAAQC,WAAY,OAAQC,MAAO,IAC5C,CAAEF,MAAO,UAAWC,WAAY,UAAWC,MAAO,MAG9ChB,EAAoB,CACxB,CAAEc,MAAO,SAAUC,WAAY,SAAUC,MAAO,KAChD,CAAEF,MAAO,cAAeC,WAAY,YAAaC,MAAO,KACxD,CAAEF,MAAO,WAAYC,WAAY,SAAUC,MAAO,IAClD,CAAEF,MAAO,WAAYC,WAAY,SAAUC,MAAO,IAClD,CAAEF,MAAO,YAAaC,WAAY,UAAWC,MAAO,IACpD,CAAEF,MAAO,aAAcC,WAAY,WAAYC,MAAO,IACtD,CAAEF,MAAO,aAAcC,WAAY,cAAeC,MAAO,K","sources":["App/pages/Projects/projects/WaText/components/BasicStatistics.jsx","App/pages/Projects/projects/WaText/components/DataGrids.jsx","App/pages/Projects/projects/WaText/engine/dashboardSettings.js"],"sourcesContent":["import React from \"react\";\n\nimport Divider from '@mui/material/Divider';\nimport Typography from \"@mui/material/Typography\";\nimport { DataGrid } from '@mui/x-data-grid';\n\nimport * as d3 from \"d3\";\n\nimport { columnsBasicStats } from \"../engine/dashboardSettings\";\nimport { CustomToolbar } from \"./DataGrids\";\n\nconst round2 = (num) => Math.round((num + Number.EPSILON) * 100) / 100;\n\nconst buildBasicStats = (textDf) => {\n  const groupBySender = d3.group(textDf, x => x.sender);\n  let basicStats = []\n  groupBySender.forEach((val, key) => {\n    if (key !== \"\") basicStats.push({\n      id: key,\n      sender: key,\n      numMessages: val.length,\n      numMedia: val.filter(x => x.type.startsWith(\"media\")).length,\n      numImages: val.filter(x => x.type.startsWith(\"media:im\")).length,\n      numAudio: val.filter(x => x.type.startsWith(\"media:aud\")).length,\n      numDeleted: val.filter(x => x.type === \"deleted\").length,\n      meanLength: round2(val.filter(x => x.type === \"plainText\").map(x => x.message.length).reduce((x, y) => x + y, 0) / val.length),\n    })\n  })\n  return basicStats;\n}\n\nconst BasicStatistics = ({ textDf }) =>\n  <React.Fragment>\n    <Divider style={{ marginTop: 10, marginBottom: 10 }} />\n    <Typography variant=\"h6\">\n      Some Basic Statistics\n    </Typography>\n    <DataGrid\n      style={{ maxHeight: 510 }}\n      rows={buildBasicStats(textDf)}\n      columns={columnsBasicStats}\n      pageSize={10}\n      density=\"compact\"\n      disableSelectionOnClick\n      components={{\n        Toolbar: CustomToolbar,\n      }}\n    />\n  </React.Fragment>\n\nexport default BasicStatistics;","import React from \"react\";\n\nimport {\n  GridToolbarContainer,\n  GridToolbarExport,\n  GridToolbarColumnsButton,\n  GridToolbarFilterButton,\n  GridToolbarDensitySelector,\n} from '@mui/x-data-grid';\n\nconst CustomToolbar = () => {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarColumnsButton color=\"info\" />\n      <GridToolbarFilterButton style={{ color: '#2196f3' }} />\n      <GridToolbarDensitySelector color=\"info\" />\n      <GridToolbarExport color=\"info\" />\n    </GridToolbarContainer>\n  );\n}\n\nexport { CustomToolbar };","const columnsDf = [\n  { field: 'timestamp', headerName: 'Timestamp', width: 210 },\n  { field: 'sender', headerName: 'Sender', width: 90 },\n  { field: 'type', headerName: 'Type', width: 80 },\n  { field: 'message', headerName: 'Message', width: 500 },\n];\n\nconst columnsBasicStats = [\n  { field: 'sender', headerName: 'Sender', width: 150 },\n  { field: 'numMessages', headerName: '#messages', width: 110 },\n  { field: 'numMedia', headerName: '#media', width: 80 },\n  { field: 'numAudio', headerName: '#audio', width: 80 },\n  { field: 'numImages', headerName: '#images', width: 90 },\n  { field: 'numDeleted', headerName: '#deleted', width: 90 },\n  { field: 'meanLength', headerName: 'Mean Length', width: 110 },\n];\n\nexport { columnsDf, columnsBasicStats };"],"names":["buildBasicStats","textDf","groupBySender","d3","x","sender","basicStats","forEach","val","key","num","push","id","numMessages","length","numMedia","filter","type","startsWith","numImages","numAudio","numDeleted","meanLength","map","message","reduce","y","Math","round","Number","EPSILON","_ref","_jsxs","React","children","_jsx","Divider","style","marginTop","marginBottom","Typography","variant","DataGrid","maxHeight","rows","columns","columnsBasicStats","pageSize","density","disableSelectionOnClick","components","Toolbar","CustomToolbar","GridToolbarContainer","GridToolbarColumnsButton","color","GridToolbarFilterButton","GridToolbarDensitySelector","GridToolbarExport","columnsDf","field","headerName","width"],"sourceRoot":""}